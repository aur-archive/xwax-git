commit 0a28389dc1d0308444da374112c264ead5386958
Author: Maxwell Pray <synthead@gmail.com>
Date:   Wed Oct 29 17:14:54 2014 -0700

    Add full unicode support to the library search field.
    Remap + and - to Ctrl-+ and Ctrl-- to permit searching for + and - in the library.

diff --git a/interface.c b/interface.c
index a84ba3c..163a45a 100644
--- a/interface.c
+++ b/interface.c
@@ -1360,94 +1360,15 @@ static void draw_library(SDL_Surface *surface, const struct rect *rect,
  * Return: true if the selector needs to be redrawn, otherwise false
  */
 
-static bool handle_key(SDLKey key, SDLMod mod)
+static bool handle_key(SDLKey key, SDLMod mod, Uint16 unicode_key)
 {
     struct selector *sel = &selector;
 
-    if (key >= SDLK_a && key <= SDLK_z) {
-        selector_search_refine(sel, (key - SDLK_a) + 'a');
-        return true;
-
-    } else if (key >= SDLK_0 && key <= SDLK_9) {
-        selector_search_refine(sel, (key - SDLK_0) + '0');
-        return true;
-
-    } else if (key == SDLK_SPACE) {
-        selector_search_refine(sel, ' ');
-        return true;
-
-    } else if (key == SDLK_BACKSPACE) {
-        selector_search_expand(sel);
-        return true;
-
-    } else if (key == SDLK_PERIOD) {
-        selector_search_refine(sel, '.');
-        return true;
-
-    } else if (key == SDLK_HOME) {
-        selector_top(sel);
-        return true;
-
-    } else if (key == SDLK_END) {
-        selector_bottom(sel);
-        return true;
-
-    } else if (key == SDLK_UP) {
-        selector_up(sel);
-        return true;
-
-    } else if (key == SDLK_DOWN) {
-        selector_down(sel);
-        return true;
-
-    } else if (key == SDLK_PAGEUP) {
-        selector_page_up(sel);
-        return true;
-
-    } else if (key == SDLK_PAGEDOWN) {
-        selector_page_down(sel);
-        return true;
-
-    } else if (key == SDLK_LEFT) {
-        selector_prev(sel);
-        return true;
-
-    } else if (key == SDLK_RIGHT) {
-        selector_next(sel);
-        return true;
-
-    } else if (key == SDLK_TAB) {
-        if (mod & KMOD_CTRL) {
-            if (mod & KMOD_SHIFT)
-                selector_rescan(sel);
-            else
-                selector_toggle_order(sel);
-        } else {
-            selector_toggle(sel);
-        }
-        return true;
-
-    } else if ((key == SDLK_EQUALS) || (key == SDLK_PLUS)) {
-        meter_scale--;
-
-        if (meter_scale < 0)
-            meter_scale = 0;
-
-        fprintf(stderr, "Meter scale decreased to %d\n", meter_scale);
-
-    } else if (key == SDLK_MINUS) {
-        meter_scale++;
-
-        if (meter_scale > MAX_METER_SCALE)
-            meter_scale = MAX_METER_SCALE;
-
-        fprintf(stderr, "Meter scale increased to %d\n", meter_scale);
-
-    } else if (key >= SDLK_F1 && key <= SDLK_F12) {
+    if (key >= SDLK_F1 && key <= SDLK_F12) {
         size_t d;
 
         /* Handle the function key press in groups of four --
-	 * F1-F4 (deck 0), F5-F8 (deck 1) etc. */
+         * F1-F4 (deck 0), F5-F8 (deck 1) etc. */
 
         d = (key - SDLK_F1) / 4;
 
@@ -1494,6 +1415,73 @@ static bool handle_key(SDLKey key, SDLMod mod)
                 break;
             }
         }
+
+    } else if (key == SDLK_TAB) {
+        if (mod & KMOD_CTRL) {
+            if (mod & KMOD_SHIFT)
+                selector_rescan(sel);
+            else
+                selector_toggle_order(sel);
+        } else
+            selector_toggle(sel);
+        return true;
+
+    } else if (mod & KMOD_CTRL && (key == SDLK_EQUALS || key == SDLK_PLUS)) {
+        meter_scale--;
+
+        if (meter_scale < 0)
+            meter_scale = 0;
+
+        fprintf(stderr, "Meter scale decreased to %d\n", meter_scale);
+
+    } else if (mod & KMOD_CTRL && key == SDLK_MINUS) {
+        meter_scale++;
+
+        if (meter_scale > MAX_METER_SCALE)
+            meter_scale = MAX_METER_SCALE;
+
+        fprintf(stderr, "Meter scale increased to %d\n", meter_scale);
+
+    } else if (key == SDLK_BACKSPACE) {
+        selector_search_expand(sel);
+        return true;
+
+    } else if (key == SDLK_HOME) {
+        selector_top(sel);
+        return true;
+
+    } else if (key == SDLK_END) {
+        selector_bottom(sel);
+        return true;
+
+    } else if (key == SDLK_UP) {
+        selector_up(sel);
+        return true;
+
+    } else if (key == SDLK_DOWN) {
+        selector_down(sel);
+        return true;
+
+    } else if (key == SDLK_PAGEUP) {
+        selector_page_up(sel);
+        return true;
+
+    } else if (key == SDLK_PAGEDOWN) {
+        selector_page_down(sel);
+        return true;
+
+    } else if (key == SDLK_LEFT) {
+        selector_prev(sel);
+        return true;
+
+    } else if (key == SDLK_RIGHT) {
+        selector_next(sel);
+        return true;
+
+    /* Only pass printable unicode characters to selector_search_refine. */
+    } else if ((unicode_key >= 32 && unicode_key <= 126) || unicode_key >= 161) {
+        selector_search_refine(sel, unicode_key);
+        return true;
     }
 
     return false;
@@ -1566,6 +1554,7 @@ static int interface_main(void)
     SDL_Event event;
     SDL_TimerID timer;
     SDL_Surface *surface;
+    SDL_EnableUNICODE(SDL_ENABLE);
 
     struct rect rworkspace, rplayers, rlibrary, rstatus, rtmp;
 
@@ -1625,7 +1614,8 @@ static int interface_main(void)
             break;
 
         case SDL_KEYDOWN:
-            if (handle_key(event.key.keysym.sym, event.key.keysym.mod))
+            if (handle_key(event.key.keysym.sym, event.key.keysym.mod,
+                           event.key.keysym.unicode))
             {
                 struct record *r;
 
diff --git a/xwax.1 b/xwax.1
index 8501c4f..73b38db 100644
--- a/xwax.1
+++ b/xwax.1
@@ -242,7 +242,7 @@ flag on the command line.
 Audio display controls:
 
 .TP
-+, \-
+C-+, C--
 Zoom in/out the close-up audio meters for all decks.
 
 .SH NOVATION DICER CONTROLS